{"ast":null,"code":"/**\n * @license Angular v13.4.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\nimport * as i0 from '@angular/core';\nimport { ɵglobal, NgZone, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, APP_ID, NgModule } from '@angular/core';\nimport { ɵBrowserDomAdapter, BrowserModule } from '@angular/platform-browser';\nimport { ɵgetDOM } from '@angular/common';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass BrowserDetection {\n  constructor(ua) {\n    this._overrideUa = ua;\n  }\n\n  get _ua() {\n    if (typeof this._overrideUa === 'string') {\n      return this._overrideUa;\n    }\n\n    return ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n  }\n\n  static setup() {\n    return new BrowserDetection(null);\n  }\n\n  get isFirefox() {\n    return this._ua.indexOf('Firefox') > -1;\n  }\n\n  get isAndroid() {\n    return this._ua.indexOf('Mozilla/5.0') > -1 && this._ua.indexOf('Android') > -1 && this._ua.indexOf('AppleWebKit') > -1 && this._ua.indexOf('Chrome') == -1 && this._ua.indexOf('IEMobile') == -1;\n  }\n\n  get isEdge() {\n    return this._ua.indexOf('Edge') > -1;\n  }\n\n  get isWebkit() {\n    return this._ua.indexOf('AppleWebKit') > -1 && this._ua.indexOf('Edge') == -1 && this._ua.indexOf('IEMobile') == -1;\n  }\n\n  get isIOS7() {\n    return (this._ua.indexOf('iPhone OS 7') > -1 || this._ua.indexOf('iPad OS 7') > -1) && this._ua.indexOf('IEMobile') == -1;\n  }\n\n  get isSlow() {\n    return this.isAndroid || this.isIOS7;\n  }\n\n  get isChromeDesktop() {\n    return this._ua.indexOf('Chrome') > -1 && this._ua.indexOf('Mobile Safari') == -1 && this._ua.indexOf('Edge') == -1;\n  } // \"Old Chrome\" means Chrome 3X, where there are some discrepancies in the Intl API.\n  // Android 4.4 and 5.X have such browsers by default (respectively 30 and 39).\n\n\n  get isOldChrome() {\n    return this._ua.indexOf('Chrome') > -1 && this._ua.indexOf('Chrome/3') > -1 && this._ua.indexOf('Edge') == -1;\n  }\n\n  get supportsCustomElements() {\n    return typeof ɵglobal.customElements !== 'undefined';\n  }\n\n  get supportsDeprecatedCustomCustomElementsV0() {\n    return typeof document.registerElement !== 'undefined';\n  }\n\n  get supportsRegExUnicodeFlag() {\n    return RegExp.prototype.hasOwnProperty('unicode');\n  }\n\n  get supportsShadowDom() {\n    const testEl = document.createElement('div');\n    return typeof testEl.attachShadow !== 'undefined';\n  }\n\n  get supportsDeprecatedShadowDomV0() {\n    const testEl = document.createElement('div');\n    return typeof testEl.createShadowRoot !== 'undefined';\n  }\n\n}\n\nconst browserDetection = /*#__PURE__*/BrowserDetection.setup();\n\nfunction dispatchEvent(element, eventType) {\n  const evt = ɵgetDOM().getDefaultDocument().createEvent('Event');\n  evt.initEvent(eventType, true, true);\n  ɵgetDOM().dispatchEvent(element, evt);\n}\n\nfunction createMouseEvent(eventType) {\n  const evt = ɵgetDOM().getDefaultDocument().createEvent('MouseEvent');\n  evt.initEvent(eventType, true, true);\n  return evt;\n}\n\nfunction el(html) {\n  return getContent(createTemplate(html)).firstChild;\n}\n\nfunction normalizeCSS(css) {\n  return css.replace(/\\s+/g, ' ').replace(/:\\s/g, ':').replace(/'/g, '\"').replace(/ }/g, '}').replace(/url\\((\\\"|\\s)(.+)(\\\"|\\s)\\)(\\s*)/g, (...match) => `url(\"${match[2]}\")`).replace(/\\[(.+)=([^\"\\]]+)\\]/g, (...match) => `[${match[1]}=\"${match[2]}\"]`);\n}\n\nfunction getAttributeMap(element) {\n  const res = new Map();\n  const elAttrs = element.attributes;\n\n  for (let i = 0; i < elAttrs.length; i++) {\n    const attrib = elAttrs.item(i);\n    res.set(attrib.name, attrib.value);\n  }\n\n  return res;\n}\n\nconst _selfClosingTags = ['br', 'hr', 'input'];\n\nfunction stringifyElement(el\n/** TODO #9100 */\n) {\n  let result = '';\n\n  if (ɵgetDOM().isElementNode(el)) {\n    const tagName = el.tagName.toLowerCase(); // Opening tag\n\n    result += `<${tagName}`; // Attributes in an ordered way\n\n    const attributeMap = getAttributeMap(el);\n    const sortedKeys = Array.from(attributeMap.keys()).sort();\n\n    for (const key of sortedKeys) {\n      const lowerCaseKey = key.toLowerCase();\n      let attValue = attributeMap.get(key);\n\n      if (typeof attValue !== 'string') {\n        result += ` ${lowerCaseKey}`;\n      } else {\n        // Browsers order style rules differently. Order them alphabetically for consistency.\n        if (lowerCaseKey === 'style') {\n          attValue = attValue.split(/; ?/).filter(s => !!s).sort().map(s => `${s};`).join(' ');\n        }\n\n        result += ` ${lowerCaseKey}=\"${attValue}\"`;\n      }\n    }\n\n    result += '>'; // Children\n\n    const childrenRoot = templateAwareRoot(el);\n    const children = childrenRoot ? childrenRoot.childNodes : [];\n\n    for (let j = 0; j < children.length; j++) {\n      result += stringifyElement(children[j]);\n    } // Closing tag\n\n\n    if (_selfClosingTags.indexOf(tagName) == -1) {\n      result += `</${tagName}>`;\n    }\n  } else if (isCommentNode(el)) {\n    result += `<!--${el.nodeValue}-->`;\n  } else {\n    result += el.textContent;\n  }\n\n  return result;\n}\n\nfunction createNgZone() {\n  return new NgZone({\n    enableLongStackTrace: true,\n    shouldCoalesceEventChangeDetection: false\n  });\n}\n\nfunction isCommentNode(node) {\n  return node.nodeType === Node.COMMENT_NODE;\n}\n\nfunction isTextNode(node) {\n  return node.nodeType === Node.TEXT_NODE;\n}\n\nfunction getContent(node) {\n  if ('content' in node) {\n    return node.content;\n  } else {\n    return node;\n  }\n}\n\nfunction templateAwareRoot(el) {\n  return ɵgetDOM().isElementNode(el) && el.nodeName === 'TEMPLATE' ? getContent(el) : el;\n}\n\nfunction setCookie(name, value) {\n  // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n  // not clear other cookies.\n  document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n}\n\nfunction supportsWebAnimation() {\n  return typeof Element.prototype['animate'] === 'function';\n}\n\nfunction hasStyle(element, styleName, styleValue) {\n  const value = element.style[styleName] || '';\n  return styleValue ? value == styleValue : value.length > 0;\n}\n\nfunction hasClass(element, className) {\n  return element.classList.contains(className);\n}\n\nfunction sortedClassList(element) {\n  return Array.prototype.slice.call(element.classList, 0).sort();\n}\n\nfunction createTemplate(html) {\n  const t = ɵgetDOM().getDefaultDocument().createElement('template');\n  t.innerHTML = html;\n  return t;\n}\n\nfunction childNodesAsList(el) {\n  const childNodes = el.childNodes;\n  const res = [];\n\n  for (let i = 0; i < childNodes.length; i++) {\n    res[i] = childNodes[i];\n  }\n\n  return res;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction initBrowserTests() {\n  ɵBrowserDomAdapter.makeCurrent();\n  BrowserDetection.setup();\n}\n\nconst _TEST_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_INITIALIZER,\n  useValue: initBrowserTests,\n  multi: true\n}];\n/**\n * Platform for testing\n *\n * @publicApi\n */\n\nconst platformBrowserTesting = /*#__PURE__*/createPlatformFactory(platformCore, 'browserTesting', _TEST_BROWSER_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\n\nlet BrowserTestingModule = /*#__PURE__*/(() => {\n  class BrowserTestingModule {}\n\n  BrowserTestingModule.ɵfac = function BrowserTestingModule_Factory(t) {\n    return new (t || BrowserTestingModule)();\n  };\n\n  BrowserTestingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrowserTestingModule\n  });\n  BrowserTestingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [{\n      provide: APP_ID,\n      useValue: 'a'\n    }, {\n      provide: NgZone,\n      useFactory: createNgZone\n    }],\n    imports: [BrowserModule]\n  });\n  return BrowserTestingModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BrowserTestingModule, platformBrowserTesting }; //# sourceMappingURL=testing.mjs.map","map":null,"metadata":{},"sourceType":"module"}