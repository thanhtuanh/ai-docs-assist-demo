{"ast":null,"code":"import { timeout, finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../document.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction DocumentUploadComponent_div_8_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \" \\u26A0\\uFE0F Warnung: Datei scheint leer zu sein \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DocumentUploadComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15)(2, \"span\", 16);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 17);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 18);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, DocumentUploadComponent_div_8_div_8_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementStart(9, \"div\", 20)(10, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function DocumentUploadComponent_div_8_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(7);\n\n      return ctx_r6.clearFile(_r0);\n    });\n    i0.ɵɵtext(11, \" \\uD83D\\uDDD1\\uFE0F Datei entfernen \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\uD83D\\uDCCE \", ctx_r1.selectedFile.name, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"error\", ctx_r1.selectedFile.size === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.formatFileSize(ctx_r1.selectedFile.size), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getFileTypeDisplay(ctx_r1.selectedFile.type));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedFile.size === 0);\n  }\n}\n\nfunction DocumentUploadComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"h3\");\n    i0.ɵɵtext(2, \"\\uD83D\\uDD04 Analyse l\\u00E4uft...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Bitte warten Sie, w\\u00E4hrend Ihr Dokument analysiert wird.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 24);\n    i0.ɵɵelement(6, \"div\", 25);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DocumentUploadComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 27)(2, \"strong\");\n    i0.ɵɵtext(3, \"\\u274C Fehler:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r3.uploadError);\n  }\n}\n\nfunction DocumentUploadComponent_div_23_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"h4\");\n    i0.ɵɵtext(2, \"\\uD83D\\uDCDD Zusammenfassung\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r8.analysisResult.summary);\n  }\n}\n\nfunction DocumentUploadComponent_div_23_div_4_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const keyword_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(keyword_r12);\n  }\n}\n\nfunction DocumentUploadComponent_div_23_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"h4\");\n    i0.ɵɵtext(2, \"\\uD83D\\uDD0D Schl\\u00FCsselw\\u00F6rter\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, DocumentUploadComponent_div_23_div_4_li_4_Template, 2, 1, \"li\", 35);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.analysisResult.keywords);\n  }\n}\n\nfunction DocumentUploadComponent_div_23_div_5_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tech_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tech_r14);\n  }\n}\n\nfunction DocumentUploadComponent_div_23_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"h4\");\n    i0.ɵɵtext(2, \"\\uD83D\\uDCBB Technologie-Empfehlungen\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, DocumentUploadComponent_div_23_div_5_li_4_Template, 2, 1, \"li\", 35);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.analysisResult.suggestedComponents);\n  }\n}\n\nfunction DocumentUploadComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"h3\");\n    i0.ɵɵtext(2, \"\\uD83D\\uDCCA Analyse-Ergebnis\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, DocumentUploadComponent_div_23_div_3_Template, 5, 1, \"div\", 29);\n    i0.ɵɵtemplate(4, DocumentUploadComponent_div_23_div_4_Template, 5, 1, \"div\", 29);\n    i0.ɵɵtemplate(5, DocumentUploadComponent_div_23_div_5_Template, 5, 1, \"div\", 29);\n    i0.ɵɵelementStart(6, \"div\", 30)(7, \"h4\");\n    i0.ɵɵtext(8, \"\\uD83D\\uDCAC War diese Analyse hilfreich?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 31)(10, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function DocumentUploadComponent_div_23_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.submitQuickFeedback(true);\n    });\n    i0.ɵɵtext(11, \" \\uD83D\\uDC4D Ja, hilfreich \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function DocumentUploadComponent_div_23_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.submitQuickFeedback(false);\n    });\n    i0.ɵɵtext(13, \" \\uD83D\\uDC4E Nicht hilfreich \");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.analysisResult.summary);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.analysisResult.keywords == null ? null : ctx_r4.analysisResult.keywords.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.analysisResult.suggestedComponents == null ? null : ctx_r4.analysisResult.suggestedComponents.length);\n  }\n}\n\nexport let DocumentUploadComponent = /*#__PURE__*/(() => {\n  class DocumentUploadComponent {\n    constructor(documentService, http, router) {\n      this.documentService = documentService;\n      this.http = http;\n      this.router = router;\n      this.selectedFile = null;\n      this.inputText = '';\n      this.isProcessing = false;\n      this.analysisResult = null;\n      this.uploadError = '';\n    }\n\n    onFileSelected(event) {\n      const input = event.target;\n\n      if (input.files && input.files.length > 0) {\n        const file = input.files[0]; // Debug logging\n\n        console.log('File selected:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        }); // Validate file\n\n        if (file.size === 0) {\n          this.uploadError = 'Die ausgewählte Datei ist leer (0 Bytes). Bitte wählen Sie eine gültige Datei aus.';\n          this.selectedFile = null;\n          return;\n        } // Check file size (max 10MB)\n\n\n        const maxSize = 10 * 1024 * 1024; // 10MB in bytes\n\n        if (file.size > maxSize) {\n          this.uploadError = `Die Datei ist zu groß (${(file.size / 1024 / 1024).toFixed(2)} MB). Maximale Größe: 10 MB.`;\n          this.selectedFile = null;\n          return;\n        } // Check file type\n\n\n        const allowedTypes = ['application/pdf', 'text/plain', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\n\n        if (!allowedTypes.includes(file.type)) {\n          this.uploadError = `Dateityp \"${file.type}\" wird nicht unterstützt. Erlaubte Formate: PDF, TXT, DOC, DOCX.`;\n          this.selectedFile = null;\n          return;\n        }\n\n        this.selectedFile = file;\n        this.uploadError = ''; // Try to read file preview for additional validation\n\n        this.previewFile(file);\n        console.log('File validation passed:', {\n          name: file.name,\n          sizeMB: (file.size / 1024 / 1024).toFixed(2),\n          type: file.type\n        });\n      }\n    } // Preview file content to validate it's readable\n\n\n    previewFile(file) {\n      if (file.type === 'text/plain' || file.type === 'text/csv' || file.type === 'application/json') {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          const content = e.target.result;\n          console.log('File preview (first 200 chars):', content.substring(0, 200));\n\n          if (!content || content.trim().length === 0) {\n            this.uploadError = 'Die Datei scheint leer zu sein oder enthält nur Leerzeichen.';\n            this.selectedFile = null;\n          }\n        };\n\n        reader.onerror = e => {\n          console.error('Error reading file:', e);\n          this.uploadError = 'Fehler beim Lesen der Datei. Die Datei könnte beschädigt sein.';\n          this.selectedFile = null;\n        };\n\n        reader.readAsText(file);\n      } else if (file.type === 'application/pdf') {\n        // For PDF files, just check if we can read it as ArrayBuffer\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          const arrayBuffer = e.target.result;\n\n          if (!arrayBuffer || arrayBuffer.byteLength === 0) {\n            this.uploadError = 'Die PDF-Datei scheint beschädigt oder leer zu sein.';\n            this.selectedFile = null;\n          } else {\n            console.log('PDF file loaded successfully, size:', arrayBuffer.byteLength, 'bytes');\n          }\n        };\n\n        reader.onerror = e => {\n          console.error('Error reading PDF file:', e);\n          this.uploadError = 'Fehler beim Lesen der PDF-Datei. Die Datei könnte beschädigt sein.';\n          this.selectedFile = null;\n        };\n\n        reader.readAsArrayBuffer(file);\n      }\n    }\n\n    uploadDocument() {\n      if (!this.selectedFile) {\n        this.uploadError = 'Bitte wählen Sie eine Datei aus.';\n        return;\n      } // Additional validation before upload\n\n\n      const validationResult = this.validateFileForUpload(this.selectedFile);\n\n      if (!validationResult.isValid) {\n        this.uploadError = validationResult.errorMessage;\n        return;\n      }\n\n      this.isProcessing = true;\n      this.uploadError = '';\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      console.log('Starting upload for file:', {\n        name: this.selectedFile.name,\n        size: this.selectedFile.size,\n        type: this.selectedFile.type\n      }); // Add timeout and better error handling\n\n      this.documentService.createDocument(formData).pipe(timeout(60000), // 60 second timeout\n      finalize(() => this.isProcessing = false)).subscribe({\n        next: response => {\n          console.log('Upload successful:', response);\n\n          if (response && response.document) {\n            this.analysisResult = this.processApiResponse(response.document);\n          } else {\n            this.analysisResult = response;\n          }\n        },\n        error: error => {\n          console.error('Upload error:', error);\n\n          if (error.name === 'TimeoutError') {\n            this.uploadError = 'Upload-Timeout: Die Verarbeitung dauert zu lange. Bitte versuchen Sie es mit einer kleineren Datei.';\n          } else if (error.status === 0) {\n            this.uploadError = 'Verbindungsfehler: Kann den Server nicht erreichen. Bitte prüfen Sie Ihre Internetverbindung.';\n          } else if (error.status === 413) {\n            this.uploadError = 'Die Datei ist zu groß für den Server. Maximale Größe: 10 MB.';\n          } else if (error.status === 415) {\n            this.uploadError = 'Dateityp wird vom Server nicht unterstützt.';\n          } else {\n            this.uploadError = `Fehler beim Upload: ${error.message || 'Unbekannter Fehler'}`;\n          }\n        }\n      });\n    } // Comprehensive file validation\n\n\n    validateFileForUpload(file) {\n      // Check if file exists and has content\n      if (!file) {\n        return {\n          isValid: false,\n          errorMessage: 'Keine Datei ausgewählt.'\n        };\n      }\n\n      if (file.size === 0) {\n        return {\n          isValid: false,\n          errorMessage: 'Die Datei ist leer (0 Bytes). Möglicherweise ist die Datei beschädigt oder wurde nicht korrekt ausgewählt.'\n        };\n      } // Check file size (max 10MB)\n\n\n      const maxSize = 10 * 1024 * 1024; // 10MB\n\n      if (file.size > maxSize) {\n        return {\n          isValid: false,\n          errorMessage: `Die Datei ist zu groß (${this.formatFileSize(file.size)}). Maximale Größe: 10 MB.`\n        };\n      } // Check file type\n\n\n      const allowedTypes = ['application/pdf', 'text/plain', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'text/csv', 'application/json', 'text/markdown'];\n\n      if (!allowedTypes.includes(file.type)) {\n        return {\n          isValid: false,\n          errorMessage: `Dateityp \"${this.getFileTypeDisplay(file.type)}\" wird nicht unterstützt. Erlaubte Formate: PDF, TXT, DOC, DOCX, CSV, JSON, MD.`\n        };\n      } // Check file name\n\n\n      if (file.name.length > 255) {\n        return {\n          isValid: false,\n          errorMessage: 'Der Dateiname ist zu lang. Maximale Länge: 255 Zeichen.'\n        };\n      } // Additional checks for specific file types\n\n\n      if (file.type === 'application/pdf' && file.size < 100) {\n        return {\n          isValid: false,\n          errorMessage: 'Die PDF-Datei scheint zu klein oder beschädigt zu sein.'\n        };\n      }\n\n      return {\n        isValid: true,\n        errorMessage: ''\n      };\n    }\n\n    analyzeText() {\n      if (!this.inputText.trim()) {\n        this.uploadError = 'Bitte Text eingeben.';\n        return;\n      }\n\n      this.isProcessing = true;\n      this.uploadError = '';\n      this.documentService.analyzeText(this.inputText).pipe(timeout(60000), // 60 second timeout\n      finalize(() => this.isProcessing = false)).subscribe({\n        next: response => {\n          console.log('Text analysis successful:', response);\n\n          if (response && response.document) {\n            this.analysisResult = this.processApiResponse(response.document);\n          } else {\n            this.analysisResult = response;\n          }\n        },\n        error: error => {\n          console.error('Text analysis error:', error);\n\n          if (error.name === 'TimeoutError') {\n            this.uploadError = 'Analyse-Timeout: Die Verarbeitung dauert zu lange. Bitte versuchen Sie es mit einem kürzeren Text.';\n          } else if (error.status === 0) {\n            this.uploadError = 'Verbindungsfehler: Kann den Server nicht erreichen. Bitte prüfen Sie Ihre Internetverbindung.';\n          } else {\n            this.uploadError = `Fehler bei der Textanalyse: ${error.message || 'Unbekannter Fehler'}`;\n          }\n        }\n      });\n    } // ✅ Neue Methode zur Verarbeitung der API-Antwort\n\n\n    processApiResponse(document) {\n      const result = {\n        summary: document.summary || '',\n        keywords: this.parseKeywords(document.keywords),\n        suggestedComponents: this.parseSuggestedComponents(document.suggestedComponents),\n        qualityScore: document.qualityScore || 0,\n        documentType: document.documentType || '',\n        complexityLevel: document.complexityLevel || ''\n      };\n      console.log('Processed API Response:', result);\n      return result;\n    } // ✅ Keywords aus JSON-String oder Text extrahieren\n\n\n    parseKeywords(keywordsString) {\n      if (!keywordsString) return [];\n\n      try {\n        // Versuche JSON zu parsen\n        if (keywordsString.includes('```json')) {\n          const jsonMatch = keywordsString.match(/```json\\s*(\\{[\\s\\S]*?\\})\\s*```/);\n\n          if (jsonMatch) {\n            const parsed = JSON.parse(jsonMatch[1]);\n            const keywords = []; // Extrahiere alle Keywords aus der verschachtelten Struktur\n\n            if (parsed.projekt) keywords.push(...parsed.projekt);\n\n            if (parsed.technologien) {\n              Object.values(parsed.technologien).forEach(tech => {\n                if (Array.isArray(tech)) keywords.push(...tech);\n              });\n            }\n\n            if (parsed.konzepte) keywords.push(...parsed.konzepte);\n            if (parsed.priorität_hoch) keywords.push(...parsed.priorität_hoch);\n            return [...new Set(keywords)]; // Duplikate entfernen\n          }\n        } // Fallback: Als JSON parsen\n\n\n        const parsed = JSON.parse(keywordsString);\n        if (Array.isArray(parsed)) return parsed; // Wenn es ein Objekt ist, alle Werte sammeln\n\n        const keywords = [];\n        Object.values(parsed).forEach(value => {\n          if (Array.isArray(value)) keywords.push(...value);else if (typeof value === 'string') keywords.push(value);\n        });\n        return keywords;\n      } catch (e) {\n        // Fallback: String aufteilen\n        return keywordsString.split(/[,;\\n]/).map(k => k.trim()).filter(k => k.length > 0);\n      }\n    } // ✅ Suggested Components aus Text extrahieren\n\n\n    parseSuggestedComponents(componentsString) {\n      if (!componentsString) return []; // Extrahiere Komponenten in eckigen Klammern [Component]\n\n      const matches = componentsString.match(/\\[([^\\]]+)\\]/g);\n\n      if (matches) {\n        return matches.map(match => match.replace(/[\\[\\]]/g, ''));\n      } // Fallback: Nach Zeilen aufteilen und filtern\n\n\n      return componentsString.split('\\n').map(line => line.trim()).filter(line => line.length > 0 && !line.startsWith('-')).slice(0, 10); // Maximal 10 Komponenten\n    }\n\n    submitQuickFeedback(helpful) {\n      console.log('Feedback:', helpful ? 'Hilfreich' : 'Nicht hilfreich');\n      alert(helpful ? '👍 Danke für Ihr positives Feedback!' : '👎 Danke für Ihr Feedback. Wir arbeiten an Verbesserungen.');\n    } // Helper methods for file display\n\n\n    formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n\n    getFileTypeDisplay(mimeType) {\n      var _a;\n\n      const typeMap = {\n        'application/pdf': 'PDF',\n        'text/plain': 'TXT',\n        'application/msword': 'DOC',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'DOCX',\n        'text/csv': 'CSV',\n        'application/json': 'JSON',\n        'text/markdown': 'MD'\n      };\n      return typeMap[mimeType] || ((_a = mimeType.split('/')[1]) === null || _a === void 0 ? void 0 : _a.toUpperCase()) || 'Unknown';\n    } // Clear selected file\n\n\n    clearFile(fileInput) {\n      this.selectedFile = null;\n      this.uploadError = '';\n      this.analysisResult = null;\n      fileInput.value = '';\n      console.log('File cleared');\n    }\n\n  }\n\n  DocumentUploadComponent.ɵfac = function DocumentUploadComponent_Factory(t) {\n    return new (t || DocumentUploadComponent)(i0.ɵɵdirectiveInject(i1.DocumentService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  DocumentUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DocumentUploadComponent,\n    selectors: [[\"app-document-upload\"]],\n    decls: 38,\n    vars: 10,\n    consts: [[1, \"upload-container\"], [1, \"title\"], [1, \"upload-card\"], [\"type\", \"file\", \"accept\", \".pdf,.txt,.doc,.docx,.csv,.json,.md\", 1, \"file-input\", 3, \"change\"], [\"fileInput\", \"\"], [\"class\", \"file-info\", 4, \"ngIf\"], [1, \"upload-buttons\"], [1, \"upload-btn\", 3, \"disabled\", \"click\"], [\"placeholder\", \"F\\u00FCgen Sie hier Ihren Text ein, den Sie analysieren m\\u00F6chten...\", \"maxlength\", \"5000\", 1, \"text-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"char-counter\"], [\"class\", \"progress-section\", 4, \"ngIf\"], [\"class\", \"error-card\", 4, \"ngIf\"], [\"class\", \"results-section\", 4, \"ngIf\"], [1, \"info-box\"], [1, \"file-info\"], [1, \"file-details\"], [1, \"file-name\"], [1, \"file-size\"], [1, \"file-type\"], [\"class\", \"file-status\", \"class\", \"warning\", 4, \"ngIf\"], [1, \"file-actions\"], [1, \"clear-btn\", 3, \"click\"], [1, \"warning\"], [1, \"progress-section\"], [1, \"progress-bar\"], [1, \"progress-fill\"], [1, \"error-card\"], [1, \"error-content\"], [1, \"results-section\"], [\"class\", \"result-card\", 4, \"ngIf\"], [1, \"simple-feedback\"], [1, \"feedback-buttons\"], [1, \"btn-helpful\", 3, \"click\"], [1, \"btn-not-helpful\", 3, \"click\"], [1, \"result-card\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function DocumentUploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"\\uD83E\\uDD16 AI Document Assistant\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"h2\");\n        i0.ɵɵtext(5, \"\\uD83D\\uDCC4 Dokument hochladen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 3, 4);\n        i0.ɵɵlistener(\"change\", function DocumentUploadComponent_Template_input_change_6_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, DocumentUploadComponent_div_8_Template, 12, 6, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function DocumentUploadComponent_Template_button_click_10_listener() {\n          return ctx.uploadDocument();\n        });\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"h2\");\n        i0.ɵɵtext(14, \"\\u270D\\uFE0F Text direkt analysieren\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"textarea\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function DocumentUploadComponent_Template_textarea_ngModelChange_15_listener($event) {\n          return ctx.inputText = $event;\n        });\n        i0.ɵɵtext(16, \"    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 9);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function DocumentUploadComponent_Template_button_click_19_listener() {\n          return ctx.analyzeText();\n        });\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(21, DocumentUploadComponent_div_21_Template, 7, 0, \"div\", 10);\n        i0.ɵɵtemplate(22, DocumentUploadComponent_div_22_Template, 6, 1, \"div\", 11);\n        i0.ɵɵtemplate(23, DocumentUploadComponent_div_23_Template, 14, 3, \"div\", 12);\n        i0.ɵɵelementStart(24, \"div\", 13)(25, \"h3\");\n        i0.ɵɵtext(26, \"\\u2139\\uFE0F Unterst\\u00FCtzte Funktionen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"ul\")(28, \"li\");\n        i0.ɵɵtext(29, \"\\uD83D\\uDCC4 Dokument-Upload (PDF, TXT, DOC, DOCX)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"li\");\n        i0.ɵɵtext(31, \"\\u270D\\uFE0F Direkte Text-Analyse\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"li\");\n        i0.ɵɵtext(33, \"\\uD83D\\uDCDD Automatische Zusammenfassung\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"li\");\n        i0.ɵɵtext(35, \"\\uD83D\\uDD0D Schl\\u00FCsselwort-Extraktion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"li\");\n        i0.ɵɵtext(37, \"\\uD83D\\uDCBB Technologie-Empfehlungen\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.selectedFile || ctx.isProcessing || ctx.selectedFile.size === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isProcessing ? \"\\u23F3 Analysiere...\" : \"\\uD83D\\uDE80 Dokument analysieren\", \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.inputText);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.inputText.length, \"/5000 Zeichen \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.inputText.trim() || ctx.isProcessing);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isProcessing ? \"\\u23F3 Analysiere...\" : \"\\uD83D\\uDD0D Text analysieren\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isProcessing);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.uploadError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.analysisResult && !ctx.isProcessing);\n      }\n    },\n    directives: [i4.NgIf, i5.DefaultValueAccessor, i5.MaxLengthValidator, i5.NgControlStatus, i5.NgModel, i4.NgForOf],\n    styles: [\".upload-container[_ngcontent-%COMP%]{max-width:750px;margin:40px auto;padding:20px;font-family:Segoe UI,sans-serif;color:#333}.title[_ngcontent-%COMP%]{font-size:2rem;font-weight:700;text-align:center;margin-bottom:30px;color:#222}.upload-card[_ngcontent-%COMP%]{background:#fff;padding:25px;border-radius:12px;box-shadow:0 2px 8px #0000000f;margin-bottom:25px}.upload-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.3rem;font-weight:600;margin-bottom:15px;border-bottom:2px solid #f0f0f0;padding-bottom:8px}.file-input[_ngcontent-%COMP%], .text-input[_ngcontent-%COMP%]{width:100%;border:1px solid #ccc;border-radius:6px;padding:12px;margin-bottom:15px;font-size:1rem}.upload-btn[_ngcontent-%COMP%]{width:100%;background:linear-gradient(90deg,#6c757d,#495057);color:#fff;font-size:1rem;padding:12px;border-radius:6px;border:none;cursor:pointer;font-weight:600;transition:background .3s ease}.upload-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:linear-gradient(90deg,#868e96,#343a40)}.info-box[_ngcontent-%COMP%]{background:#f9f9f9;border-left:4px solid #6c757d;padding:20px;border-radius:8px}.info-box[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1.1rem;margin-bottom:10px}.info-box[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{padding-left:20px;margin:5px 0}.info-box[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin:4px 0}.analysis-output[_ngcontent-%COMP%]{margin-top:15px;background:#f8f9fa;padding:15px;border-left:4px solid #6c757d;border-radius:8px}.feedback-container[_ngcontent-%COMP%]{margin-top:20px;padding:20px;background:#f9f9f9;border-radius:8px;border-left:4px solid #007bff}.file-info[_ngcontent-%COMP%]{margin:15px 0;padding:12px;background:#f8f9fa;border:1px solid #e9ecef;border-radius:6px}.file-details[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:5px}.file-name[_ngcontent-%COMP%]{font-weight:600;color:#495057}.file-size[_ngcontent-%COMP%]{color:#6c757d;font-size:.9em}.file-size.error[_ngcontent-%COMP%]{color:#dc3545;font-weight:600}.file-type[_ngcontent-%COMP%]{color:#6c757d;font-size:.8em;text-transform:uppercase;background:#e9ecef;padding:2px 6px;border-radius:3px;display:inline-block;width:fit-content}.file-status.warning[_ngcontent-%COMP%]{margin-top:8px;color:#856404;background:#fff3cd;border:1px solid #ffeaa7;padding:6px 10px;border-radius:4px;font-size:.9em}@media (min-width: 768px){.file-details[_ngcontent-%COMP%]{flex-direction:row;align-items:center;justify-content:space-between}.file-name[_ngcontent-%COMP%]{flex:1}}.file-actions[_ngcontent-%COMP%]{margin-top:10px;display:flex;gap:10px}.clear-btn[_ngcontent-%COMP%]{background:#6c757d;color:#fff;border:none;padding:6px 12px;border-radius:4px;cursor:pointer;font-size:.9em;transition:background-color .2s}.clear-btn[_ngcontent-%COMP%]:hover{background:#5a6268}.upload-buttons[_ngcontent-%COMP%]{margin-top:15px}.upload-btn[_ngcontent-%COMP%]:disabled{background:#6c757d;cursor:not-allowed;opacity:.6}.file-input[_ngcontent-%COMP%]{width:100%;padding:10px;border:2px dashed #dee2e6;border-radius:6px;background:#f8f9fa;cursor:pointer;transition:border-color .2s}.file-input[_ngcontent-%COMP%]:hover{border-color:#007bff;background:#e3f2fd}\"]\n  });\n  return DocumentUploadComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}