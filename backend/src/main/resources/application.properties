# ========================================
# üåç Gemeinsame Basis-URL (f√ºr CORS/Frontend)
# ========================================
frontend.base.url=http://localhost:4200
API_FRONTEND_ORIGIN=${frontend.base.url}

# ==========================
# üîê Security (Custom-Flags)
# ==========================
spring.security.enabled=false
security.csrf.enabled=false

# ==========================
# üóÉÔ∏è H2 In-Memory Datenbank
# ==========================
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
# Leerer Standard bei H2 ist √ºblich; falls n√∂tig, setze auf "password"
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ==========================
# üìÅ Datei-Upload
# ==========================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# ==========================
# ü§ñ OpenAI API Settings (kompatibel zu deiner alten Struktur)
# ==========================
openai.api.key=${OPENAI_API_KEY:}
openai.api.model=gpt-3.5-turbo
openai.api.max-retries=3
# Timeout in Sekunden (alt)
openai.api.timeout=30
# Optional: zweiter Timeout-Key (falls im Code genutzt)
openai.timeout.seconds=60
# Token-/Sampling-Limits
openai.api.max-tokens=500
openai.api.temperature=0.3

# ==========================
# üåê CORS Settings
# ==========================
cors.allowed.origins=${frontend.base.url},http://localhost:4201
# Optional: Boot-gest√ºtzte CORS-Config (falls genutzt)
spring.web.cors.allowed-origins=${cors.allowed.origins}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# ==========================
# ü©∫ Actuator (ohne Prometheus)
# ==========================
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.metrics.enabled=true
management.metrics.export.prometheus.enabled=false

# ==========================
# üí∞ Cache (Caffeine, kein Redis)
# ==========================
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=1h

# ==========================
# ü™µ Logging
# ==========================
logging.level.com.bits.aidocassist.service=INFO
logging.level.com.theokanning.openai=DEBUG
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.file.name=${LOG_FILE:logs/ai-doc-assist.log}

# ==========================
# üì¶ App Info
# ==========================
spring.application.name=ai-doc-assist
app.name=AI Document Assistant with Industry Detection
app.version=1.1.0
app.description=AI-powered document analysis with automatic industry classification
server.port=8080
server.servlet.context-path=/
